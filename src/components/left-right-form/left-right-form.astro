---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Markdown from "../utility/markdown.astro";

interface Props {
  background_color: string;
}

const block = Astro.props;
---

<section class="left-right" style={`background-color: #705bef;`} id="contact">
  <div class="content">
    <h2 class="heading" style={`color: #ffffff;`}>
      <span>Contact Me</span><span>Contact Me</span>
    </h2>
    <form
      class="form"
      style={`background-color: white;`}
      method="post"
      id="contact-form"
      action="/success/">
      <div class="form-group">
        <label for="name">Name </label>
        <input type="text" name="name" id="name" />
      </div>
      <div class="form-group">
        <label for="email">Email </label>
        <input type="email" name="email" id="email" required />
      </div>
      <div class="form-group message">
        <label for="message">Message </label>
        <textarea name="message" id="message" required></textarea>
      </div>
      <input type="hidden" name="inbox_key" value="personal" />
      <input type="text" name="_gotcha" style="display: none;" />
      <div class="">
        <input
          class="px-8 py-1 border hover:shadow-sm hover:shadow-slate-200 active:bg-emerald-200 tracking-widest rounded-full font-light whitespace-normal"
          type="submit"
          value="Send message"
        />
      </div>
    </form>

    <script
      is:inline
      src="https://www.google.com/recaptcha/api.js?render=6LenN1EqAAAAAMXJ3Gp7dRqar0wr5abU0uw-8rP1"
    ></script>
    <script is:inline>
      var submitted = false;
      var tokenCreated = false;
      var formEl = document.getElementById("contact-form");

      formEl.addEventListener("submit", function (event) {
        // Check if the recaptcha exists
        if (!tokenCreated) {
          // Prevent submission
          event.preventDefault();

          // Prevent more than one submission
          if (!submitted) {
            submitted = true;
            // needs for recaptacha ready
            grecaptcha.ready(function () {
              // do request for recaptcha token
              // response is promise with passed token
              console.log("Sending grecaptcha request with event:", event);
              grecaptcha
                .execute("6LenN1EqAAAAAMXJ3Gp7dRqar0wr5abU0uw-8rP1", {
                  action: "create_comment",
                })
                .then(function (token) {
                  // add token to form
                  console.log(
                    "Attaching grecaptcha token:",
                    token,
                    "To hidden form input"
                  );
                  console.log("formEl before", formEl);
                  var input = document.createElement("input");
                  input.type = "hidden";
                  input.name = "g-recaptcha-response";
                  input.value = token;
                  formEl.appendChild(input);

                  console.log("formEl after", formEl);

                  // resubmit the form
                  tokenCreated = true;
                  formEl.submit();
                });
            });
          }
        }
      });
    </script>
  </div>
</section>

<style>
  section {
    padding-block: 128px;
  }
  .content {
    max-width: var(--pageContainer);
    padding-inline: var(--pagePadding);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .heading {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: clamp(3rem, 9vw, 9.75rem);
    line-height: clamp(3rem, 9vw, 9.75rem);
    font-weight: 800;
  }
  .heading span {
    padding-bottom: 32px;
  }

  .heading span:nth-child(2) {
    transform: rotatex(180deg);
    opacity: 0.125;
    border-bottom: 0.5px solid rgba(255, 255, 255, 0.439);
    display: none;
  }

  form {
    width: 100%;
    max-width: 28rem;
    padding-block: 64px;
    padding-inline: 24px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    border-radius: 4px;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 4px 9px;
    font-weight: 300;
  }
  .form-group {
    display: flex;
    flex-direction: column;
    letter-spacing: 0.125em;
    color: rgb(15, 15, 15);
  }
  .message {
    margin-block: 24px;
  }
  .form-group input,
  .form-group textarea {
    border: 1px solid rgb(201, 201, 201);
    border-radius: 2px;
    padding-inline: 0.25rem;
    padding-block: 0.125rem;
  }
  .form-group textarea {
    min-height: 20ch;
  }

  @media screen and (min-width: 420px) {
  }
  @media screen and (min-width: 720px) {
    .form {
      padding-inline: 48px;
    }
  }
  @media screen and (min-width: 1200px) {
    .content {
      flex-direction: row;
      justify-content: space-between;
      gap: 48px;
    }

    .heading span:nth-child(2) {
      display: block;
    }
  }
</style>
